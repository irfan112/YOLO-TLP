# Ultralytics YOLO-TLP Configuration
# SPDConv preserves fine-grained features for small object detection

nc: 10  # number of classes

scales:
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv12-TLP backbone with SPDConv for feature preservation
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]                     # 0-P1/2 (16ch for 'n')
  - [-1, 1, Conv, [128, 3, 2]]                    # 1-P2/4 (32ch for 'n')
  - [-1, 4, C2fCIB, [128, False, 0.25]]           # 2 (32ch for 'n')
  
  - [-1, 1, SPDConv, [128]]                       # 3-P3/8 SPD downsampling (32ch for 'n')
  - [-1, 4, C2fCIB, [256, False, 0.25]]           # 4 (64ch for 'n')
  
  - [-1, 1, SPDConv, [256]]                       # 5-P4/16 SPD downsampling (64ch for 'n')
  - [-1, 4, C3k2, [512, True]]                    # 6 (128ch for 'n')
  
  - [-1, 1, Conv, [1024, 3, 2]]                   # 7-P5/32 (256ch for 'n')
  - [-1, 3, C3k2, [1024, True]]                   # 8 (256ch for 'n')
  
  - [-1, 1, PSA, [1024, 0.5]]                     # 9 Position-Sensitive Attention
  - [-1, 1, SPPF, [1024, 5]]                      # 10 Spatial Pyramid Pooling

# YOLOv12-TLP head with multi-scale detection
head:
  # P5/32 → P4/16
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 11
  - [[-1, 6], 1, Concat, [1]]                     # 12 cat P5 with P4
  - [-1, 4, C3k2, [512, False]]                   # 13 (128ch for 'n')
  
  # P4/16 → P3/8
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 14
  - [[-1, 4], 1, Concat, [1]]                     # 15 cat P4 with P3
  - [-1, 4, C2fCIB, [256, False]]                 # 16 (64ch for 'n')
  
  # P3/8 → P2/4 (optional for tiny objects)
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 17
  - [[-1, 2], 1, Concat, [1]]                     # 18 cat P3 with P2
  - [-1, 4, C2fCIB, [128, False]]                 # 19 P2 output (32ch for 'n')
  
  # P2/4 → P3/8 bottom-up
  - [-1, 1, Conv, [128, 3, 2]]                    # 20
  - [[-1, 16], 1, Concat, [1]]                    # 21 cat with P3
  - [-1, 4, C3k2, [256, False]]                   # 22 P3 output (64ch for 'n')
  
  # P3/8 → P4/16 bottom-up
  - [-1, 1, Conv, [256, 3, 2]]                    # 23
  - [[-1, 13], 1, Concat, [1]]                    # 24 cat with P4
  - [-1, 4, C3k2, [512, False]]                   # 25 P4 output (128ch for 'n')
  
  # Detection heads at P2, P3, P4 for multi-scale detection
  - [[19, 22, 25], 1, Detect, [nc]]               # 26 Detect(P2, P3, P4)