# YOLOv12n with 2 detection scales (36x36 and 72x72)
# Modified for custom grid sizes
# Use with imgsz=576 (576/16=36, 576/8=72) or imgsz=648 (648/18=36, 648/9=72)

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov12n.yaml' will call yolov12.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv12n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs

# YOLOv12n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8  -> Will use for 72x72 grid (stride 8)
  - [-1, 3, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16 -> Will use for 36x36 grid (stride 16)
  - [-1, 3, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32 -> SKIP this scale
  - [-1, 3, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv12n head - Modified for 2 scales only
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C3k2, [512, False]]  # 12

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 4], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C3k2, [256, False]]  # 15 (P3/8 output for 72x72 grid)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 12], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C3k2, [512, False]]  # 18 (P4/16 output for 36x36 grid)

  # Detect layer with 2 scales only: P3 (72x72) and P4 (36x36)
  - [[15, 18], 1, Detect, [nc]]  # Detect(P3, P4) - 2 scales instead of 3
